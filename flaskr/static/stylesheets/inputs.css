/* Generator Inputs */


/* Containers */

.div_inputs_all {
    margin-top: calc(var(--nav_height) + 1em);
    margin-bottom: 5%;
    margin-left: auto;
    margin-right: auto;
}

 
.input_container, .div_input_button_container {
    display: grid;

    -webkit-transition: all var(--base_animation_time) linear;  
    -moz-transition: all var(--base_animation_time) linear;  
    -o-transition: all var(--base_animation_time) linear;  
    -ms-transition: all var(--base_animation_time) linear;  
    transition: all var(--base_animation_time) linear;
}

.input_container {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-row-gap: 1em;
    grid-column-gap: 1rem;
    max-height: 1000px;
}

.div_input_button_container{
    justify-items: stretch;
    margin-top: 1em;
    grid-column-gap: 2rem;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    /* padding-left: 2rem;
    padding-right: 2rem; */

}

.div_input_dropdown, .div_input_type_in, .div_input_slider, .div_input_checkbox {
    display: grid;
    gap: 1rem;

    margin: 0;
    padding: var(--padding_distance);

    background-color: var(--color_black_transparent);

    border-radius: 0.5em;
    border-width: 0.1em;
    border-style: solid;
    border-color: var(--color_dark_grey);

    box-shadow: 0 0 1em black;
}

.div_input_dropdown:hover, .div_input_type_in:hover, .div_input_slider:hover, .div_input_checkbox:hover {
    box-shadow: 0 0 1em var(--color_neon_pink);
    border-color: var(--color_neon_white);
}

.div_input_text_container p {
    grid-template-columns: 1fr 2fr;
    /* padding-bottom: var(--padding_distance);
    padding-left: var(--padding_distance); */
}

.div_input_dropdown {
    grid-template-columns: 1fr 2fr;
}

.div_input_slider {
    grid-template-columns: 1fr 3fr 0.5fr;
}

.div_input_type_in {
    grid-template-columns: 1fr 2fr 1fr;
}

.div_input_checkbox {
    grid-template-columns: 3fr 1fr;
}

.div_button_load_defaults {
    margin: auto;
    width: 100%;
    position: relative;
    margin-top: var(--padding_distance);
    margin-bottom: var(--padding_distance);
}

.div_type_in, .div_slider, .div_checkbox {
    padding-bottom: var(--padding_distance);
    padding-top: var(--padding_distance);
}

.div_select {
    margin: 0;
    position: relative;
}


/* Inputs */

input {
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;

    -webkit-transition: all var(--base_animation_time) ease;  
    -moz-transition: all var(--base_animation_time) ease;  
    -o-transition: all var(--base_animation_time) ease;  
    -ms-transition: all var(--base_animation_time) ease;  
    transition: all var(--base_animation_time) ease;
}

/* Number Inputs */
input[type="number"], input[type="text"], input[type="checkbox"] {
    display: inline-block;

    -moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;

    background-color: transparent;

    border-style: solid;
    border-color: var(--white);
    border-width: 0.1rem;
    border-radius: 0.1rem;

    color: var(--white);
    text-indent: 1em;
    height: 2em;
}

input[type="number"], input[type="text"] {
    width: 6em;
}

input[type="checkbox"] {
    width: 2em;
}

/* Checkbox elements */
/* Customize the label (the container) */
.div_checkbox_container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.div_checkbox_container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: transparent;

    border-style: solid;
    border-color: var(--white);
    border-width: 0.1rem;
    border-radius: 0.1rem;
}

/* On mouse-over, add a grey background color */
.div_checkbox_container:hover input ~ .checkmark {
    background-color: transparent;
}

/* When the checkbox is checked, add a blue background */
.div_checkbox_container input:checked ~ .checkmark {
    background-color: transparent;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.div_checkbox_container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.div_checkbox_container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid var(--color_neon_white);
    border-width: 0 0.2rem 0.2rem 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
} 

/* Normally displayed inputs */

input[type="number"]:hover, input[type="text"]:hover, input[type="checkbox"]:hover, .div_checkbox_container:hover input ~ .checkmark  {
    border-color: var(--color_neon_white);

    background-color: rgba(0, 0, 0, 0);
    color: var(--color_neon_pink);
    text-shadow: 0 0 1em currentColor;

    box-shadow: 
        0 0 1.5em currentColor,
        inset 0 0 1.5em currentColor;
}

/* Range inputs */
input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    height: 0.25rem;

    width: 100%;

    vertical-align: text-bottom;

    background-color: var(--color_neon_white);
    box-shadow: 0 0 1em var(--color_neon_pink);
    border-radius: 1em;

    -webkit-transition: .2s;
    transition: opacity .2s;

    z-index: 2;
}

input[type="range"]:hover, input[type="checkbox"] {
    cursor: pointer;
}


/* Slider's circle */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
}

input[type="range"]::-webkit-slider-thumb, input[type="range"]::-moz-range-thumb {
    width: var(--main_height);
    height: var(--main_height);
    border-radius: 50%;
    border-color: var(--color_neon_white); 
    background-color: var(--color_neon_white);
    box-shadow: 0 0 1em var(--color_neon_pink);
    cursor: pointer;
}